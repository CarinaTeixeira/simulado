Simulado running..

<% for (method in responses) { %>

    <% for ( path in responses[method] ) { %>
    <section>
       <span class="method <%= method %>"><%= method %></span>
       <span class=path><%= path %></span>   

       <% var endpointID = "" + method + path.replace(/\//g, '') %>
       <button class="toggle-btn expand" onclick="return toggle(event);" data-id="<%= endpointID  %>"></button>

       <div id="<%= endpointID %>" class=collapsed>
         
        <div class=responses-info>
          <% var responsesOnPath =  responses[method][path]; %>
          <%= responsesOnPath.length %> possible responses on this http method &amp; endpoint. Higher ones trump lower ones.
         </div>                                             
                              
        <% 
            for (i = responsesOnPath.length-1 ; i >= 0; --i ) {
              var mockedResponse = responsesOnPath[i];
        %>
         <hr><span class=response-index><%= +i+1 %>)</span>        
           <div class=status>
             Status: <%= JSON.stringify(mockedResponse['status'])%>
           </div>        
                    
           <% if (mockedResponse['conditionalRequestBody'] ||  mockedResponse['conditionalRequestHeaders']) { %>
             <div class=conditional-request>                  
               <% if (mockedResponse['conditionalRequestHeaders']) { %> Request headers:
                <pre><code><%= JSON.stringify(mockedResponse['conditionalRequestHeaders'], undefined, 2)%></code></pre>
              <% } %>
              <% if (mockedResponse['conditionalRequestBody']) { %> Request body:
                <pre><code><%= JSON.stringify(mockedResponse['conditionalRequestBody'], undefined, 2)%></code></pre>
              <% } %>
             </div>
           <% } %>
           
           <div class=response-body>
             Response body:
             <pre><code><%= JSON.stringify(mockedResponse['response'], undefined, 2)%></code></pre>
           </div>
           
        <% } %>

         <% if (requests[method] && requests[method][path] ) { %>
           <hr>
           <div class=last-request>
             Last request:
             <pre><code><%= JSON.stringify(requests[method][path], undefined, 2)%></code></pre>
           </div>
          <% } %> 

       </div>
     </section>

    <% } %>

  
<% } %>


<link rel="stylesheet" href="/highlight.js/hybrid.min.css">
<script src="/highlight.js/highlight.min.js"></script>
<script type="text/javascript">
  hljs.initHighlightingOnLoad();
  
  var expandedItems = JSON.parse(document.cookie.split('simulado=')[1]);
  for (var i = 0; i<expandedItems.length; i++){ 
    var itemButton = document.querySelector('[data-id='+expandedItems[i]+']')
    if (itemButton) {
      itemButton.click();
    }
  }
    
  function toggle(e) {
    var content = document.getElementById(e.target.dataset.id);
    var currentState = content.className;
    content.className =  currentState === 'collapsed' ? 'expanded' : 'collapsed'
    e.target.className = e.target.className === 'toggle-btn collapse'  ? 'toggle-btn expand' : 'toggle-btn collapse'
    document.cookie = 'simulado='+JSON.stringify(getListOfExpandedItems());
  }
  
  function getListOfExpandedItems() {
    var expanded = document.getElementsByClassName('expanded');
    var state = [];
    for (var i = 0; i<expanded.length; i++){ 
      state.push(expanded[i].id)
    }
    return state;
  }

</script>



<style>
  body {
    background-color: #1d1f21;
    color: #FFDEAD;
    font-family: "Lucida Console", Monaco, monospace;
    font-size: 12px;
  }
  
  section {
    margin: 5px;
  }

  .method {
    background-color: #FFDEAD;
    color: #1d1f21;
    font-size: 9px;
    font-weight: bold;
    line-height: 16px;
    padding: 2px 10px;
    border-radius: 20px;
    vertical-align: middle;
  }
  
  .method.post {
      background-color: #1CE1CE;
  }  
  
  .method.put {
      background-color: #BAD;
  }
  
  .status, .conditional-request-body {
    margin: 5px 0;
    font-size: 9px;
  }
  
  .responses-info {
    margin: 5px 0;
    color: #999;
  }
    
  .response-index {
    color: #999;
  }
  
  hr {
    border: 1px dotted #444;
  }
  
  .toggle-btn {
    background-color: #1d1f21;
    border: 2px solid #1d1f21; 
    color: a55;
    border-radius: 10px;
    font-family: sans-serif;
    font-size: 10px;
    outline: none;
  }
  
  .toggle-btn:hover {
     border: 2px solid #a55; 
  }
  
  .toggle-btn.expand::before {
     content: 'Expand'
  }
  
  .toggle-btn.collapse::before {
     content: 'Collapse'
  }
  
  .collapsed {
    max-height: 0;
    overflow: hidden;
    margin-left: 10px;
  }  
  
  
  .expanded {
    max-height: auto;
    margin-left: 10px;
  }
  

</style>